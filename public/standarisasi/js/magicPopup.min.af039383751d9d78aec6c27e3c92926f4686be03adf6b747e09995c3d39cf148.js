import{auth,db,doc,getDoc,updateDoc,deleteDoc}from"/js/firebaseConfig.js";class MagicPopup{constructor(){if(this.element=document.getElementById("magicPopup"),!this.element)return;this.currentDocPath=null,window.magicPopupInstance=this,this.initEvents()}async show(){const e=this.element.dataset.tipe||"info";this.element.querySelector(".judul").textContent=this.element.dataset.judul,e==="info"?(await this.loadData(),this.toggleEditMode(this.element.dataset.allowEdit==="true")):this.showNotification()}async loadData(){try{const e=JSON.parse(this.element.dataset.paths);if(!e||e.length===0)throw new Error("Path Firestore tidak ditemukan.");const t=e[0];this.currentDocPath=t.path.replace(/{userId}/g,auth.currentUser.uid);const n=await this.fetchData(t);this.renderData(n,t.fields)}catch(e){this.showError(`Gagal memuat data: ${e.message}`)}}async fetchData({path:e}){const n=doc(db,e.replace(/{userId}/g,auth.currentUser.uid)),t=await getDoc(n);if(!t.exists())throw new Error("Dokumen tidak ditemukan.");return t.data()}renderData(e,t){const n=this.element.querySelector(".isi-form");n.innerHTML=t.map(t=>this.renderField(t,e)).join("")}renderField(e,t){const[i,n]=e.endsWith("[]")?[!0,e.slice(0,-2)]:[!1,e],s=this.getNestedValue(t,n),o=this.element.dataset.allowEdit==="true";return`
      <div class="field-data" data-field="${n}">
        <label>${this.formatLabel(n)}</label>
        ${i?this.renderArrayField(s,o):this.renderInputField(n,s,o)}
      </div>
    `}renderInputField(e,t,n){return typeof t=="object"&&t!==null?`<pre>${JSON.stringify(t,null,2)}</pre>`:n?`<input name="${e}" value="${t||""}" />`:`<div>${this.formatValue(t)}</div>`}renderArrayField(e,t){return!e||!Array.isArray(e)?`<div>-</div>`:t?`
        <div class="array-editor">
          ${e.map((e,t)=>`
            <div class="array-item">
              <input value="${e}" />
              <button class="btn-hapus-item" data-index="${t}">×</button>
            </div>
          `).join("")}
          <button class="btn-tambah-item">+ Tambah Item</button>
        </div>
      `:e.map(e=>`
      <div class="array-item">${this.formatValue(e)}</div>
    `).join("")}async saveData(){if(this.element.dataset.allowEdit!=="true")return;const e=doc(db,this.currentDocPath),t=this.collectFormData();try{await updateDoc(e,t),this.showNotification("Data berhasil diperbarui!","sukses")}catch(e){this.showError(`Gagal menyimpan data: ${e.message}`)}}async deleteData(){if(this.element.dataset.allowDelete!=="true")return;if(!confirm("Apakah Anda yakin ingin menghapus data ini?"))return;try{await deleteDoc(doc(db,this.currentDocPath)),this.showNotification("Data berhasil dihapus!","sukses"),this.close()}catch(e){this.showError(`Gagal menghapus data: ${e.message}`)}}collectFormData(){const e={};return this.element.querySelectorAll(".field-data").forEach(t=>{const s=t.dataset.field,n=t.querySelector("input, textarea");n&&(e[s]=n.value)}),e}toggleEditMode(e){this.element.querySelectorAll("input, textarea").forEach(t=>{t.disabled=!e})}getNestedValue(e,t){return t.split(".").reduce((e,t)=>e?.[t],e)}formatLabel(e){return e.replace(/_/g," ").replace(/([A-Z])/g," $1").replace(/^./,e=>e.toUpperCase())}formatValue(e){return e==null?"-":typeof e=="object"&&!Array.isArray(e)?JSON.stringify(e,null,2):e?.toDate instanceof Function?e.toDate().toLocaleString():e}showNotification(e,t="info"){const n=this.element.querySelector(".ikon"),s=this.element.querySelector(".teks-pesan");n&&s&&(n.textContent=t==="sukses"?"✅":"❌",s.textContent=e)}showError(e){this.showNotification(`Error: ${e}`,"error")}initEvents(){this.element.addEventListener("click",e=>{(e.target.classList.contains("tutup")||e.target===this.element)&&this.close()}),this.element.querySelector(".btn-simpan")?.addEventListener("click",()=>this.saveData()),this.element.querySelector(".btn-hapus")?.addEventListener("click",()=>this.deleteData())}close(){this.element.style.display="none",this.element.querySelector(".isi-form").innerHTML=""}}document.addEventListener("DOMContentLoaded",()=>new MagicPopup)