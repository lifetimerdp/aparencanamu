import{db,auth,getDoc,doc}from"/js/firebaseConfig.js";class MagicChart{constructor(e){this.container=e,this.canvas=e.querySelector("canvas"),this.ctx=this.canvas.getContext("2d"),this.tooltip=e.querySelector(".magic-chart-tooltip"),this.errorContainer=e.querySelector(".magic-chart-error"),this.config={collection:e.dataset.collection||"users",docId:e.dataset.docId,fields:e.dataset.fields.split(","),colors:e.dataset.colors?.split(",")||["#4BC0C0","#36A2EB"],title:e.dataset.title||""},this.init()}async init(){this.showLoading();try{this.config.docId==="auto"&&await this.handleAutoDocId(),await this.loadFirebaseData(),this.setupCanvas(),this.drawChart(),this.addEventListeners()}catch(e){this.showError(e.message)}finally{this.hideLoading()}}async handleAutoDocId(){return new Promise((e,t)=>{const n=auth.onAuthStateChanged(async s=>{s?(this.config.docId=s.uid,n(),e()):(n(),t(new Error("User belum login. Silakan login terlebih dahulu.")))})})}async loadFirebaseData(){const t=doc(db,this.config.collection,this.config.docId),e=await getDoc(t);if(!e.exists())throw new Error(`Dokumen tidak ditemukan di koleksi ${this.config.collection}`);const n=e.data();this.prepareChartData(n)}prepareChartData(e){this.config.labels=this.config.fields,this.config.data=this.config.fields.map(t=>{const n=e[t];return Array.isArray(n)?n.length:typeof n=="number"?n:typeof n=="string"?1:0})}setupCanvas(){const e=window.devicePixelRatio||1,t=this.canvas.getBoundingClientRect();this.canvas.width=t.width*e,this.canvas.height=t.height*e,this.ctx.scale(e,e)}drawChart(){this.clearCanvas();const e=40,o=Math.max(...this.config.data),n=this.canvas.width/window.devicePixelRatio-e*2,s=this.canvas.height/window.devicePixelRatio-e*2,t=30,i=15;this.config.title&&(this.ctx.fillStyle="#333",this.ctx.font="18px Arial",this.ctx.textAlign="center",this.ctx.fillText(this.config.title,this.canvas.width/(2*window.devicePixelRatio),e-20)),this.config.data.forEach((s,a)=>{const r=e+(t+i)*a,c=s/o*n;this.ctx.fillStyle=this.config.colors[a%this.config.colors.length],this.ctx.fillRect(e,r,c,t),this.ctx.fillStyle="#333",this.ctx.font="14px Arial",this.ctx.textBaseline="middle",this.ctx.fillText(this.config.labels[a],e+5,r+t/2),this.ctx.fillStyle="#fff",this.ctx.fillText(s.toString(),e+c-30,r+t/2)}),this.ctx.beginPath(),this.ctx.moveTo(e,e+s),this.ctx.lineTo(e+n,e+s),this.ctx.strokeStyle="#ddd",this.ctx.lineWidth=1,this.ctx.stroke()}clearCanvas(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)}addEventListeners(){const e=new ResizeObserver(()=>{this.setupCanvas(),this.drawChart()});e.observe(this.container),this.canvas.addEventListener("mousemove",e=>this.handleMouseMove(e))}handleMouseMove(e){const n=this.canvas.getBoundingClientRect(),o=e.clientX-n.left,s=e.clientY-n.top,i=40,a=30,r=15,t=Math.floor((s-i)/(a+r));t>=0&&t<this.config.data.length?(this.tooltip.style.opacity="1",this.tooltip.style.left=`${o+15}px`,this.tooltip.style.top=`${s}px`,this.tooltip.textContent=`${this.config.labels[t]}: ${this.config.data[t]}`):this.tooltip.style.opacity="0"}showLoading(){this.container.classList.add("loading")}hideLoading(){this.container.classList.remove("loading")}showError(e){this.errorContainer.textContent=e,this.errorContainer.style.display="block",this.canvas.style.display="none"}}document.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll(".magic-chart-container").forEach(e=>{new MagicChart(e)})})