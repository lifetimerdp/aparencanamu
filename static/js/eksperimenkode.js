saya mempunyai elemen bar chart horizontal. tetapi, masih banyak hal yang bisa ditambahkan, dirubah, atau dirubah dari elemen ini.

saya ingin agar bar dari chart horizontal ini memiliki bentuk seperti pada contoh gambar (lihat pada llink.

linknya = https://img.freepik.com/free-vector/elements-infographic_53876-26534.jpg?t=st=1738410909~exp=1738414509~hmac=9b9b78738f2c12d11fbc8cdfb980799cc1a40d57c6a513c3954e32259ca9a435&w=740

selain itu, berikan saya saran, masukan dan kritik tentang elemen bar chart horizontal yang saya buat. misalnya, sebaiknya tambahkan elemen x, dan tambah animasi ke dalam bar chart horizontal, dll.

catatan penting:
- gunakan css dan js murni tanpa framework, library atau link eksternal.
- sebagai informasi, saya menggunakan hugo + firebase untuk membangun web ini.

berikut kode html, css dan js untuk halaman pengembangan diri:
pengembanganDiri.html:
{{ define "main" }}
<main class=container><h1 class=page-title>📈 Pengembangan Diri</h1><button aria-label="Toggle theme"id=theme-toggle>🌙</button><div class=chart-container id=progress-chart><h2>📊 Progress Pengembangan Diri</h2><div class=chart-bars></div></div><nav class=main-nav><div class=desktop-tabs><a aria-selected=true href=#form-section role=tab class=active>➕ Input Baru</a> <a aria-selected=false href=#progress-section role=tab>📊 Progress</a> <a aria-selected=false href=#target-section role=tab>🎯 Target</a> <a aria-selected=false href=#learning-section role=tab>📚 Pembelajaran</a></div><select class=mobile-dropdown><option value=#form-section>➕ Input Baru<option value=#progress-section>📊 Progress<option value=#target-section>🎯 Target<option value=#learning-section>📚 Pembelajaran</select></nav><section class="active form-section"id=form-section><div class=form-wizard><div class=wizard-header><div class=wizard-progress><div class=progress-bar style=width:33%></div></div><div class=wizard-steps><div class="active step">1. Kategori</div><div class=step>2. Detail</div><div class=step>3. Konfirmasi</div></div></div><form class=wizard-form id=pengembangan-form><div class="active wizard-panel"data-step=1><div class=input-group><label for=kategori-select>Pilih Kategori</label> <select id=kategori-select required><option value="">Pilih Kategori...<option value=target>🎯 Target<option value=booksRead>📚 Buku<option value=coursesTaken>🎓 Kursus<option value=hobbiesInterests>🎨 Hobi</select></div><div class=button-group><button class=btn-next type=button>Lanjut →</button></div></div><div class=wizard-panel data-step=2><div class=input-grid><div class=input-group><label for=item-input>Judul</label> <input id=item-input required></div><div class=input-group><label for=tanggal-input>Tanggal</label> <input id=tanggal-input required type=date></div><div class="input-group full-width"><label for=deskripsi-input>Deskripsi</label> <textarea id=deskripsi-input maxlength=500></textarea><div class=input-footer><span class=char-count>0/500</span> <span class=input-hint>ⓘ Wajib diisi</span></div></div></div><div class=button-group><button class=btn-prev type=button>← Kembali</button> <button class=btn-next type=button>Lanjut →</button></div></div><div class=wizard-panel data-step=3><div class=preview-card><h3>🔄 Preview Data</h3><div class=preview-content></div></div><div class=button-group><button class=btn-prev type=button>← Ubah</button> <button class=btn-submit type=submit>💾 Simpan</button></div></div></form></div></section><div class=data-grid id=data-sections><template id=section-template><section class=data-card><div class=card-header><h2 class=section-title></h2><input class=search-bar placeholder=Cari...> <button class=btn-add>＋ Tambah</button></div><div class=card-content><ul class=item-list></ul><p class=empty-state>📭 Belum ada data</div></section></template></div><div class=modal-overlay id=modal><div class=modal-card><div class=modal-header><h2>✏️ Edit Item</h2><button class=btn-close aria-label=Close>×</button></div><form class=modal-body id=edit-form></form></div></div><div id=toast-container aria-live=polite></div></main>
<link rel="stylesheet" href="{{ "css/pengembanganDiri.css" | relURL }}">
<script type="module" src="{{ "js/pengembanganDiri.js" | relURL }}"></script>
{{ end }}

pengembanganDiri.css:
:root{--primary:#2A9D8F;--secondary:#264653;--accent:#E9C46A;--error:#E76F51;--background:#F8F9FA;--text:#212529;--border:#DEE2E6;--radius-sm:4px;--radius-md:8px;--radius-lg:12px;--shadow-sm:0 1px 3px rgba(0, 0, 0, 0.12);--shadow-md:0 4px 6px rgba(0, 0, 0, 0.1);--shadow-lg:0 10px 15px rgba(0, 0, 0, 0.1);--transition:all 0.2s cubic-bezier(0.4, 0, 0.2, 1)}body.dark-mode{--background:#121212;--text:#ffffff;--border:#333333;--primary:#1E90FF;--secondary:#333333;--accent:#FFD700;--error:#FF4500}body{background:var(--background);color:var(--text);font-family:'Inter',system-ui,sans-serif;line-height:1.5;margin:0;padding:0;transition:background-color 0.3s ease,color 0.3s ease}.container{max-width:1280px;margin:0 auto;padding:1rem}.main-nav{margin:2rem 0}.desktop-tabs{display:flex;gap:1rem;border-bottom:2px solid var(--border)}.desktop-tabs a{padding:.75rem 1.5rem;border-radius:var(--radius-md) var(--radius-md) 0 0;color:var(--text);text-decoration:none;transition:var(--transition)}.desktop-tabs a.active{background:var(--primary);color:#fff}.mobile-dropdown{display:none;width:100%;padding:.75rem;border:2px solid var(--border);border-radius:var(--radius-md);background:var(--background);color:var(--text)}.form-wizard{background:var(--background);border-radius:var(--radius-lg);box-shadow:var(--shadow-md);margin:2rem 0;overflow:hidden;border:1px solid var(--border)}.wizard-header{padding:1.5rem;background:var(--secondary);color:#fff}.wizard-progress{height:4px;background:rgb(255 255 255 / .2);border-radius:var(--radius-sm);margin-bottom:1rem}.progress-bar{height:100%;background:var(--accent);transition:var(--transition)}.wizard-steps{display:flex;justify-content:space-between;gap:1rem}.step{opacity:.5;font-weight:500}.step.active{opacity:1;color:var(--accent)}.wizard-panel{padding:2rem;display:none;overflow:visible}.wizard-panel.active{display:block}.input-grid{display:grid;grid-template-columns:repeat(2,1fr);gap:1.5rem}.input-group{margin-bottom:1rem}.input-group label{display:block;margin-bottom:.5rem;font-weight:500}.input-group input,.input-group select,.input-group textarea{box-sizing:border-box;width:100%;max-width:100%;padding:.75rem;border:2px solid var(--border);border-radius:var(--radius-md);transition:var(--transition);overflow-wrap:break-word;background:var(--background);color:var(--text)}.input-group input:focus,.input-group textarea:focus{border-color:var(--primary);outline:none;box-shadow:0 0 0 3px rgb(42 157 143 / .2)}.full-width{grid-column:1 / -1}.input-footer{display:flex;justify-content:space-between;margin-top:.5rem;font-size:.875rem;color:#6C757D}.data-grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(300px,1fr));gap:1.5rem;margin:2rem 0}.data-card{background:var(--background);border-radius:var(--radius-lg);box-shadow:var(--shadow-sm);padding:1.5rem;animation:fadeIn 0.3s ease-out;border:1px solid var(--border)}.card-header{display:flex;justify-content:space-between;align-items:center;margin-bottom:1rem;flex-wrap:wrap;gap:.5rem}.section-title{margin:0;font-size:1.25rem}.search-bar{padding:.5rem;border:2px solid var(--border);border-radius:var(--radius-md);width:150px;background:var(--background);color:var(--text)}.btn-add{padding:.5rem 1rem;background:var(--primary);color:#fff;border:none;border-radius:var(--radius-md);cursor:pointer;transition:var(--transition)}.btn-add:hover{transform:translateY(-2px);box-shadow:var(--shadow-lg)}.item-list{list-style:none;padding:0;margin:0}.item-list li{padding:1rem;margin:.5rem 0;background:var(--background);border-radius:var(--radius-md);display:flex;justify-content:space-between;align-items:center;animation:fadeIn 0.3s ease-out}.item-list li h3{max-width:70%;word-break:break-word}.empty-state{text-align:center;color:#6C757D;padding:2rem 0}.modal-overlay{position:fixed;top:0;left:0;right:0;bottom:0;background:rgb(0 0 0 / .5);display:none;justify-content:center;align-items:center;z-index:1000}.modal-card{background:var(--background);border-radius:var(--radius-lg);width:90%;max-width:500px;max-height:90vh;overflow:auto;padding:1.5rem;animation:scaleIn 0.3s ease-out;border:1px solid var(--border)}.modal-header{display:flex;justify-content:space-between;align-items:center;padding:1.5rem;border-bottom:2px solid var(--border)}.btn-close{background:none;border:none;font-size:1.5rem;cursor:pointer;color:var(--text)}.modal-body{padding:1.5rem}.chart-container{background:var(--background);border:1px solid var(--border);border-radius:var(--radius-lg);padding:1.5rem;margin:2rem 0;box-shadow:var(--shadow-sm)}.chart-container h2{margin:0 0 1.5rem 0;font-size:1.5rem}.chart-bar{display:flex;align-items:center;margin:.8rem 0;gap:1rem}.bar-label{min-width:120px;display:flex;align-items:center;gap:.5rem}.bar-container{flex-grow:1;height:30px;background:var(--border);border-radius:var(--radius-md);overflow:hidden}.bar-fill{height:100%;background:var(--primary);width:0;transition:width 0.8s ease,background-color 0.3s ease;border-radius:var(--radius-md)}.bar-value{min-width:60px;text-align:right;font-weight:500}#toast-container{position:fixed;bottom:20px;right:20px;z-index:1000}.notification{padding:12px 24px;border-radius:var(--radius-md);background:var(--primary);color:#fff;box-shadow:var(--shadow-md);margin-bottom:10px;animation:slideIn 0.3s ease-out,fadeOut 0.3s ease-out 2.7s}.notification.error{background:var(--error)}@keyframes fadeIn{from{opacity:0;transform:translateY(10px)}to{opacity:1;transform:translateY(0)}}@keyframes scaleIn{from{transform:scale(.9);opacity:0}to{transform:scale(1);opacity:1}}@keyframes slideIn{from{transform:translateX(100%)}to{transform:translateX(0)}}@keyframes fadeOut{from{opacity:1}to{opacity:0}}@media (max-width:768px){.desktop-tabs{display:none}.mobile-dropdown{display:block}.input-grid{grid-template-columns:1fr}.data-grid{grid-template-columns:1fr}.modal-card{width:100%;margin:10px}}@media (max-width:480px){.container{padding:.5rem}.input-group input,.input-group select,.input-group textarea{font-size:16px;padding:1rem;width:100vw;max-width:calc(100% - 2rem)}.item-list li{flex-direction:column;gap:1rem;padding:1.5rem;align-items:flex-start}.item-list li h3{max-width:100%}.item-actions{width:100%;display:flex;justify-content:flex-end;gap:.5rem}.wizard-panel{padding:1rem}}

pengembanganDiri.js:
import{auth,db}from "./firebaseConfig.js";import{doc,getDoc,setDoc,updateDoc,Timestamp}from "https://www.gstatic.com/firebasejs/10.12.2/firebase-firestore.js";const CATEGORIES={target:{icon:'🎯',label:'Target'},booksRead:{icon:'📚',label:'Buku'},coursesTaken:{icon:'🎓',label:'Kursus'},hobbiesInterests:{icon:'🎨',label:'Hobi'},keterampilan:{icon:'🛠️',label:'Keterampilan'},prestasi:{icon:'🏆',label:'Prestasi'},sertifikasi:{icon:'📜',label:'Sertifikasi'},catatan:{icon:'📝',label:'Catatan'}};class DevelopmentManager{constructor(){this.currentStep=0;this.formData={};this.userData={};this.editFormSubmitHandler=null;this.debounceTimer=null;this.init()}
async init(){this.initDOM();this.setupEventListeners();this.authStateHandler();this.setDefaultDate();this.populateKategoriOptions();this.setupThemeToggle()}
initDOM(){this.dom={formWizard:document.querySelector('.form-wizard'),wizardPanels:document.querySelectorAll('.wizard-panel'),btnPrev:document.querySelectorAll('.btn-prev'),btnNext:document.querySelectorAll('.btn-next'),kategoriSelect:document.getElementById('kategori-select'),itemInput:document.getElementById('item-input'),tanggalInput:document.getElementById('tanggal-input'),deskripsiInput:document.getElementById('deskripsi-input'),dataGrid:document.getElementById('data-sections'),sectionTemplate:document.getElementById('section-template'),modal:document.getElementById('modal'),editForm:document.getElementById('edit-form'),themeToggle:document.getElementById('theme-toggle')}}
setupEventListeners(){document.querySelectorAll('.desktop-tabs a').forEach(tab=>{tab.addEventListener('click',(e)=>{e.preventDefault();const target=tab.getAttribute('href');this.showSection(target)})});document.querySelector('.mobile-dropdown').addEventListener('change',(e)=>{this.showSection(e.target.value)});this.dom.btnPrev.forEach(btn=>btn.addEventListener('click',()=>this.handlePrevStep()));this.dom.btnNext.forEach(btn=>btn.addEventListener('click',()=>this.handleNextStep()));document.getElementById('pengembangan-form').addEventListener('submit',(e)=>this.handleFormSubmit(e));this.dom.dataGrid.addEventListener('click',(e)=>this.handleDynamicElements(e));this.dom.dataGrid.addEventListener('input',(e)=>this.handleSearchInput(e));this.dom.deskripsiInput.addEventListener('input',()=>this.updateCharacterCount());this.dom.modal.querySelector('.btn-close').addEventListener('click',()=>this.toggleModal())}
setupThemeToggle(){const savedTheme=localStorage.getItem('theme');if(savedTheme){document.body.classList.add(savedTheme);this.dom.themeToggle.textContent=savedTheme==='dark-mode'?'☀️':'🌙'}
this.dom.themeToggle.addEventListener('click',()=>{document.body.classList.toggle('dark-mode');const isDarkMode=document.body.classList.contains('dark-mode');localStorage.setItem('theme',isDarkMode?'dark-mode':'');this.dom.themeToggle.textContent=isDarkMode?'☀️':'🌙'})}
showSection(sectionId){document.querySelectorAll('section').forEach(section=>{section.classList.remove('active')});document.querySelector(sectionId).classList.add('active');document.querySelectorAll('.desktop-tabs a').forEach(tab=>{tab.classList.toggle('active',tab.getAttribute('href')===sectionId)})}
async authStateHandler(){auth.onAuthStateChanged(async(user)=>{if(!user)return(window.location.href='/masuk');await this.loadUserData(user.uid);this.renderDataSections()})}
handleNextStep(){if(!this.validateStep())return;this.currentStep++;this.updateWizard()}
handlePrevStep(){this.currentStep--;this.updateWizard()}
validateStep(){const currentPanel=this.dom.wizardPanels[this.currentStep];const requiredFields=currentPanel.querySelectorAll('[required]');let isValid=!0;requiredFields.forEach(field=>{if(!field.checkValidity()){field.reportValidity();isValid=!1}});return isValid}
updateWizard(){const progress=((this.currentStep+1)/this.dom.wizardPanels.length)*100;this.dom.formWizard.querySelector('.progress-bar').style.width=`${progress}%`;this.dom.wizardPanels.forEach((panel,index)=>{panel.classList.toggle('active',index===this.currentStep)});if(this.currentStep===2){this.updatePreview()}}
updatePreview(){const previewContent=this.dom.formWizard.querySelector('.preview-content');previewContent.innerHTML=`
      <p><strong>Kategori:</strong> ${CATEGORIES[this.dom.kategoriSelect.value].label}</p>
      <p><strong>Judul:</strong> ${this.dom.itemInput.value}</p>
      <p><strong>Tanggal:</strong> ${new Date(this.dom.tanggalInput.value).toLocaleDateString('id-ID')}</p>
      ${this.dom.deskripsiInput.value ? `<p><strong>Deskripsi:</strong>${this.dom.deskripsiInput.value}</p>` : ''}
    `}
async handleFormSubmit(e){e.preventDefault();this.showLoading();try{const user=auth.currentUser;if(!user)return;const itemData={id:this.generateId(),title:this.dom.itemInput.value.trim(),date:Timestamp.fromDate(new Date(this.dom.tanggalInput.value)),description:this.dom.deskripsiInput.value.trim(),category:this.dom.kategoriSelect.value,createdAt:Timestamp.now(),};await this.saveToFirebase(user.uid,itemData);this.resetForm();this.showNotification('Data berhasil disimpan!','success');await this.loadUserData(user.uid);this.renderDataSections()}catch(error){this.showNotification(`Gagal menyimpan: ${error.message}`,'error')}finally{this.hideLoading()}}
showLoading(){const button=this.dom.formWizard.querySelector('.btn-submit');button.innerHTML=`<div class="loading-spinner"></div>`;button.disabled=!0}
hideLoading(){const button=this.dom.formWizard.querySelector('.btn-submit');button.innerHTML='💾 Simpan';button.disabled=!1}
showNotification(message,type='success'){const toastContainer=document.getElementById('toast-container');const existing=toastContainer.querySelector('.notification');if(existing)existing.remove();const notification=document.createElement('div');notification.className=`notification ${type === 'error' ? 'error' : ''}`;notification.textContent=message;toastContainer.appendChild(notification);setTimeout(()=>{notification.remove()},3000)}
resetForm(){this.currentStep=0;this.updateWizard();this.dom.formWizard.querySelector('form').reset();this.setDefaultDate()}
setDefaultDate(){this.dom.tanggalInput.value=new Date().toISOString().split('T')[0]}
populateKategoriOptions(){const select=this.dom.kategoriSelect;select.innerHTML='<option value="">Pilih Kategori...</option>';Object.entries(CATEGORIES).forEach(([value,category])=>{const option=document.createElement('option');option.value=value;option.textContent=`${category.icon} ${category.label}`;select.appendChild(option)})}
renderDataSections(){this.dom.dataGrid.innerHTML='';Object.entries(CATEGORIES).forEach(([key,category])=>{const section=this.dom.sectionTemplate.content.cloneNode(!0);section.querySelector('.section-title').textContent=`${category.icon} ${category.label}`;section.querySelector('.data-card').id=`${key}-section`;section.querySelector('.btn-add').dataset.category=key;this.dom.dataGrid.appendChild(section)});this.renderAllItems()}
renderAllItems(){Object.keys(CATEGORIES).forEach(category=>{const listElement=document.querySelector(`#${category}-section .item-list`);const emptyState=document.querySelector(`#${category}-section .empty-state`);const items=this.userData[category]||[];this.renderItems(listElement,emptyState,items,category)})}
renderItems(listElement,emptyState,items,category){listElement.innerHTML='';if(items.length===0){emptyState.style.display='block';return}
emptyState.style.display='none';items.forEach(item=>{const li=document.createElement('li');li.innerHTML=`
        <div>
          <h3>${item.title}</h3>
          <small>${item.date.toDate().toLocaleDateString('id-ID')}</small>
        </div>
        <div class="item-actions">
          <button class="btn-edit" data-id="${item.id}" data-category="${category}">✏️</button>
          <button class="btn-delete" data-id="${item.id}" data-category="${category}">🗑️</button>
        </div>
      `;listElement.appendChild(li)})}
handleDynamicElements(e){const target=e.target;if(target.classList.contains('btn-add')){this.handleAddItem(target.dataset.category)}
if(target.classList.contains('btn-edit')){this.handleEditItem(target.dataset.id,target.dataset.category)}
if(target.classList.contains('btn-delete')){this.handleDeleteItem(target.dataset.id,target.dataset.category)}}
handleAddItem(category){this.dom.kategoriSelect.value=category;document.querySelector('#form-section').scrollIntoView({behavior:'smooth'});this.handleNextStep()}
async handleEditItem(itemId,category){const item=this.userData[category]?.find(i=>i.id===itemId);if(!item)return;const editFormHTML=`
      <div class="input-group">
        <label for="edit-title">Judul</label>
        <input id="edit-title" value="${item.title}" required>
      </div>
      <div class="input-group">
        <label for="edit-date">Tanggal</label>
        <input type="date" id="edit-date" value="${item.date.toDate().toISOString().split('T')[0]}" required>
      </div>
      <div class="input-group">
        <label for="edit-desc">Deskripsi</label>
        <textarea id="edit-desc">${item.description || ''}</textarea>
      </div>
      <input type="hidden" id="edit-item-id" value="${itemId}">
      <input type="hidden" id="edit-category" value="${category}">
      <div class="button-group">
        <button type="button" class="btn-cancel">Batal</button>
        <button type="submit" class="btn-submit">Simpan Perubahan</button>
      </div>
    `;this.toggleModal(editFormHTML);if(this.editFormSubmitHandler){this.dom.editForm.removeEventListener('submit',this.editFormSubmitHandler)}
this.dom.editForm.querySelector('.btn-cancel').addEventListener('click',()=>this.toggleModal());this.editFormSubmitHandler=(e)=>this.handleUpdateItem(e);this.dom.editForm.addEventListener('submit',this.editFormSubmitHandler)}
async handleUpdateItem(e){e.preventDefault();const user=auth.currentUser;if(!user)return;const updates={title:document.getElementById('edit-title').value,date:Timestamp.fromDate(new Date(document.getElementById('edit-date').value)),description:document.getElementById('edit-desc').value,updatedAt:Timestamp.now(),};try{const userRef=doc(db,'users',user.uid);const category=document.getElementById('edit-category').value;const itemId=document.getElementById('edit-item-id').value;const updatedItems=this.userData[category].map(item=>item.id===itemId?{...item,...updates}:item);await updateDoc(userRef,{[category]:updatedItems});this.toggleModal();this.showNotification('Perubahan berhasil disimpan!','success');const listElement=document.querySelector(`#${category}-section .item-list`);const emptyState=document.querySelector(`#${category}-section .empty-state`);this.renderItems(listElement,emptyState,updatedItems,category)}catch(error){this.showNotification(`Gagal menyimpan perubahan: ${error.message}`,'error')}}
async handleDeleteItem(itemId,category){if(!confirm('Apakah Anda yakin ingin menghapus item ini?'))return;try{const userRef=doc(db,'users',auth.currentUser.uid);const filteredItems=this.userData[category].filter(item=>item.id!==itemId);await updateDoc(userRef,{[category]:filteredItems});this.showNotification('Item berhasil dihapus','success');const listElement=document.querySelector(`#${category}-section .item-list`);const emptyState=document.querySelector(`#${category}-section .empty-state`);this.renderItems(listElement,emptyState,filteredItems,category)}catch(error){this.showNotification(`Gagal menghapus: ${error.message}`,'error')}}
toggleModal(content){this.dom.modal.style.display=this.dom.modal.style.display==='flex'?'none':'flex';if(content){this.dom.editForm.innerHTML=content}else{this.dom.editForm.innerHTML=''}}
generateId(){return Date.now().toString(36)+Math.random().toString(36).substr(2,5)}
async saveToFirebase(uid,data){const userRef=doc(db,'users',uid);const userSnap=await getDoc(userRef);const category=data.category;const updateData={[category]:userSnap.exists()?[...(userSnap.data()[category]||[]),data]:[data]};await setDoc(userRef,updateData,{merge:!0})}
renderChart(){const chartContainer=document.querySelector('#progress-chart .chart-bars');chartContainer.innerHTML='';const total=Object.values(CATEGORIES).reduce((acc,_,key)=>acc+(this.userData[key]?.length||0),0);Object.entries(CATEGORIES).forEach(([key,category])=>{const count=this.userData[key]?.length||0;const bar=document.createElement('div');bar.className='chart-bar';bar.innerHTML=`
        <div class="bar-label">${category.icon} ${category.label}</div>
        <div class="bar-container">
          <div class="bar-fill" style="width: ${total ? (count/total)*100 : 0}%"></div>
        </div>
        <div class="bar-value">${count} item</div>
      `;chartContainer.appendChild(bar)})}
async loadUserData(uid){const userRef=doc(db,'users',uid);const userSnap=await getDoc(userRef);this.userData=userSnap.exists()?userSnap.data():{};this.renderChart()}
updateCharacterCount(){const charCount=this.dom.deskripsiInput.value.length;this.dom.deskripsiInput.closest('.input-group').querySelector('.char-count').textContent=`${charCount}/500`}
handleSearchInput(e){if(e.target.classList.contains('search-bar')){if(this.debounceTimer)clearTimeout(this.debounceTimer);this.debounceTimer=setTimeout(()=>{const searchTerm=e.target.value.toLowerCase();const items=e.target.closest('.data-card').querySelectorAll('.item-list li');items.forEach(item=>{const title=item.querySelector('h3').textContent.toLowerCase();item.style.display=title.includes(searchTerm)?'flex':'none'})},300)}}}
const developmentManager=new DevelopmentManager()